@using System.IO
@inject IFileReaderService fileReaderService
@using Tewr.Blazor.FileReader



@* 3 parts to inserting an image:
    1) brose and select the image
    2) display the image that you have selected
    3) save the image that you have selected*@


@* (1) THis uses the file input HTML tags*@
<div>
    <label>@Label</label>   
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg, .jpeg, .png" />
    </div>
</div>


@* (2) Showing the image is a bit more complicated.
    a) if you are uploading an image, it is still not in the dB so we need to display the image as a base64 image
    b) if you are using a URL (or an image that can be referenced in the dB, then we need to display the image as a src.*@
<div>
    @if (imageBase64 != null)
    {
        <div>
            <img src="data:image/jpeg;base64, @imageBase64" style="width: 400px;" />
        </div>
    }
    @if (ImageURL != null)
    {
        <div>
            <img src="@ImageURL" style="width: 200px;" />
        </div>
    }
</div>



@code {

    [Parameter]
    public string Label { get; set; } = "Image";

    [Parameter]
    public string ImageURL { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedImage { get; set; }

    private string imageBase64;

    ElementReference inputElement;

    @* this code reads the image that the user selects and converts it to base64*@
    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var imageBytes = new byte[memoryStream.Length];
                memoryStream.Read(imageBytes, 0, (int)memoryStream.Length);
                imageBase64 = Convert.ToBase64String(imageBytes);
                await OnSelectedImage.InvokeAsync(imageBase64);
                ImageURL = null;
                StateHasChanged();
            }
        }
    }

}
