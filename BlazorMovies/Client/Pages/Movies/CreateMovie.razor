@page "/movies/create"
@inject NavigationManager navigationManager
@inject IMoviesRepository movieRepository
@inject IPeopleRepository peopleRepository
@inject IGenresRepository genreRepository

<h3>Create Movie</h3>

@if (NotSelectedGenres != null)
    {
        <MovieForm movie="movie" NotSelectedGenres="NotSelectedGenres" SelectedGenres="SelectedGenres" OnValidSubmit="SaveMovie" />
    }


@code {

    private Movie movie = new Movie();
    private List<Genre> NotSelectedGenres;
    private List<Genre> SelectedGenres;

    protected async override Task OnInitializedAsync()
    {
        SelectedGenres = new List<Genre>();
        NotSelectedGenres = await genreRepository.GetGenres();
    }

    private async Task SaveMovie()
    {
        Console.WriteLine($"Movie saved with name: { movie.Title}");
        Console.WriteLine($"Movie saved with summary: { movie.Summary}");


        try
        {
            var movieId = await movieRepository.CreateMovie(movie);
            navigationManager.NavigateTo($"movie/{movieId}/{movie.Title.Replace(" ", "-")}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }
}
