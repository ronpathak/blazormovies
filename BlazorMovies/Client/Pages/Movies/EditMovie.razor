@page "/movies/edit/{MovieId:int}"
@inject NavigationManager navigationManager
@inject IMoviesRepository movierepository

<h3>Edit Movie</h3>

@if (movie != null)
{
    <MovieForm movie="movie" NotSelectedGenres="NotSelectedGenresList" SelectedGenres="SelectedGenresList" SelectedActors="SelectedActors" OnValidSubmit="MovieEdit" />
}
@*SelectedActors="SelectedActors" *@


@code {
    [Parameter]
    public int MovieId { get; set; }

    private Movie movie = new Movie();
    private Genre genre;
    private List<Genre> SelectedGenresList = new List<Genre>();// { new Genre() { Id = 2, Name = "Comedy" } };
    private List<Genre> NotSelectedGenresList = new List<Genre>(); //{ new Genre() { Id = 2, Name = "Action" } };
    private List<Person> SelectedActors = new List<Person>();


    //private List<Genre> NotSelectedGenres = new List<Genre>()
    //{
    //    new Genre(){Id = 2, Name = "Comedy"},
    //    new Genre(){Id = 3, Name = "Drama"}
    //};

    //private List<Genre> SelectedGenres = new List<Genre>()
    //{
    //    new Genre(){Id = 1, Name = "Action"}
    //};


    protected async override Task OnInitializedAsync()
    {
        var model = await movierepository.GetMovieToUpdate(MovieId);
        movie = model.Movie;
        SelectedGenresList = model.SelectedGenres;
        NotSelectedGenresList = model.NotSelectedGenres;
        SelectedActors = model.Actors;




        Console.WriteLine($"the movie Poster is {movie.Poster}");

        Console.WriteLine($"The id of the movie is {MovieId}");
        Console.WriteLine($"The name  of the movie is {movie.Title}");
        Console.WriteLine($"The summary of the movie is {movie.Summary}");
        Console.WriteLine($"The selected genres of the movie are:");
        for (int gen = 0; gen < SelectedGenresList.Count; gen++)
        {
            Console.WriteLine($"{SelectedGenresList[gen].Id}   {SelectedGenresList[gen].Name}");
        }
        Console.WriteLine($"The notselected genres of the movie are:");
        for (int gen = 0; gen < NotSelectedGenresList.Count; gen++)
        {
            Console.WriteLine($"{NotSelectedGenresList[gen].Id}     {NotSelectedGenresList[gen].Name}");
        }
        Console.WriteLine($"The actors of the movie are:");
        for (int act = 0; act < SelectedActors.Count; act++)
        {
            Console.WriteLine($"{SelectedActors[act].Name}");
        }
    }


    private void MovieEdit()
    {
        Console.WriteLine($"Movie saved with name: { movie.Title}");
        navigationManager.NavigateTo("movies/search");
    }


}
